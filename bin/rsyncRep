#!/bin/bash
#
# Brief description of your script
# Copyright 2022 bombi

function main() {

  if [[ -n "$1" ]];
  then

    cd temp || exit

    # git clone https://oauth2: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@github.com/partarum/partarum.git

    echo "Zeige derzeitige Remoteverbindungen - partarum-modular:"
    git remote -v

    echo "initialisiere neues Projekt:"
    git init

    echo "zeige Remoteverbindungen nach der Initialisierung:"
    git remote -v

    echo "füge jetzt neue Remoteverbindung hinzu"
    git remote add origin https://oauth2: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@github.com/partarum/partarum.git

    echo "Hinzufügen von E-Mail und User"
    git config user.email "email@partarum.de"
    git config user.name "svenskanda"

    echo "Hinzufügen von push.autoSetupRemote true"
    git config --global --add --bool push.autoSetupRemote true

    echo "Ausgabe der Config"
    git config --list

    echo "führe fetch aus:"
    git fetch

    echo "Zeige aktuellen Branch:"
    git branch -v

    echo "Erstellen von Branch main:"
    git checkout -b main

    echo "Zeige aktuellen Branch:"
    git branch -v

    echo "Nochmal fetch ausführen - um den Unterschied zu sehen:"
    git fetch

    echo "Branch main auf den Rechner holen"
    git pull -f origin "$3"

    echo "Zeige aktuellen Branch:"
    git branch -v

    echo "liste aktuellen Ordner auf:"
    ls -a

    echo "checkout now to $1"
    git checkout -b "$1"

    echo "Zeige aktuellen Branch:"
    git branch -v

    echo "Zeige den aktuellen Status nach dem checkout zu $1 an:"
    git status

    echo "zeige Remoteverbindungen nach dem Checkout:"
    git remote -v

    echo "liste aktuellen Ordner auf:"
    ls -a

    echo "Eine Ebene runter... und Ordner anzeigen"
    cd ..
    ls -a

    echo "Inhalt von Partarum löschen - einzig im Branch $1"
    rm -rf temp/*

    echo "Zurück zu tmp wechseln und Git - Cache bereinigen:"
    cd temp || exit
    git rm -rf .

    echo "Zeige Status:"
    git status

    echo "Liste aktuellen Ordner auf:"
    ls -a

    echo "Commit erstellen für ersten Push - hier wird erstmal gelöscht:"
    git commit -m "$1 - first round - delete"

    echo "Ausführen des Pushs"
    git push -u

    echo "Zeige Status:"
    git status

    echo "Wir verlassen temp wieder"
    cd ..

    echo "Jetzt kommt Deno an die Reihe"
    deno run --allow-all .github/.partarum/Deno/createBuild.js

    rm -rf Partarum/PartarumJS/ClientSide

    rsync -a Partarum/PartarumJSBuild/* Partarum/PartarumJS/ClientSide

    rm -rf Partarum/PartarumJSBuild

    echo "rsync von partarum-modular zu temp"
    rsync -a -p --exclude-from=.github/.partarum/rsync_exclude . temp

    echo "wir gehen wieder zu temp"
    cd temp || exit

    echo "Auflisten von aktuellen Ordner nach rsync:"
    ls -a

    echo "Zeige den aktuellen Status nach rsync:"
    git status

    echo "add Folder und Files zu git:"

    git add --all API/
    git add --all app/
    git add --all cli/
    git add --all config/
    git add --all Partarum/
    git add --all public/

    git add .gitignore
    git add .htaccess
    git add composer.json
    git add composer.lock
    git add index.php
    git add LICENSE
    git add README.md

    echo "Zeige Status nach add:"
    git status

    echo "Hinzufügen der Commits:"
    if [[ -n "$2" ]];
    then
      git commit -m "$2"
    else
      git commit -m "$1"
    fi

    echo "Zeige Status nach commit:"
    git status

    echo "Ausführen des Pushs"
    git push -u

    echo "Zeige Status:"
    git status

    #echo "Zeige Ordner public/assets aus dem Script heraus:"
    #ls -R public/assets

    #echo "Hinzufügen von push.autoSetupRemote true"
    #git config --global --add --bool push.autoSetupRemote true

    #echo "Hinzufügen von push.default is current"
    #git config --global push.default current

    #echo "Folgende Branches sind gelistet:"
    #git branch -v

    #echo "zeige aktuelle Remoteverbindungen nach dem autosetup:"
    #git remote -v

    #echo "Zeige Status:"
    #git status

    #echo "Ausführen des Pushs"
    #git push -u

    #echo "Zeige Status:"
    #git status

  else
    echo "Du hast den Commit vergessen"
  fi

    # add remot
    # pull and push
}

main "$@"